{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"Print to console": {
		"scope": "",
		"prefix": "test",
		"body": [
			"#include <bits/stdc++.h>",
			"#include <unordered_set>",
			"#define int long long",
			"#define gcd(a, b) (__gcd(a, b))",
			"#define vin(a,n) for(int i=0;i<n;++i) cin>>a[i];",
			"#define vout(a,n) for(int i=0;i<n;++i) cout<<a[i]<<' ';",
			"#define all(a) (a.begin(), a.end()); ",
			"#define pb push_back",
			"#define no cout<<\"NO\"<<endl;",
			"#define yes cout<<\"YES\"<<endl;",
			"#define vi vector<int>",
			"#define input_tej_le ios::sync_with_stdio(false); cin.tie(NULL);",
			"using namespace  std;",
			 "/*",
			 	" ██████     ██████     ██████  ",
			   "██         ██     ██   ██    ██ ",
			   "██   ███   ██     ██   ██    ██ ",
			   "██    ██   ██     ██   ██    ██ ",
			    " ██████     ██████     ██████  ",
			"==========================================================",
			"Author: Vaidik Saxena",
			"From : IIITL",
			"==========================================================",
			"*/",



			"void vulture(){",
				"$0",
			"}",
			
			




			"signed main(){",
			"input_tej_le;",
			    "int t;",
				"cin>>t;",
				"while(t--){",
			        "vulture();",
		        "}",
			"}"
		],
		"description": "Log output to console"
	}
}